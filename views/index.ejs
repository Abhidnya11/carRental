
<!DOCTYPE html>
<html>

<head>
    <title>Fire Emergency</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.8.0/dist/leaflet.css" />
    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link rel="script" href="/script.js">
   

    <style>
        body {
            margin: 0;
            padding: 0;
        }
    </style>

</head>

<body>

    <div style="margin:20px;">
        <button id="travel" class="btn btn-info btn-danger btn-lg" onclick="travel()">Emergency</button>
    </div>

    </div>
    </div>



    <div id="map" style="width:100%; height: 100vh"></div>
    <script src="https://unpkg.com/leaflet@1.8.0/dist/leaflet.js"></script>
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>
    <script src="https://unpkg.com/neo4j-driver"></script>

    <script>
        var map = L.map('map').setView([49.3692442,8.5858208], 25);
        mapLink = "<a href='http://openstreetmap.org'>OpenStreetMap</a>";
        L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', { attribution: 'Leaflet &copy; ' + mapLink + ', contribution', maxZoom: 18 }).addTo(map);

        var cab1 = L.icon({
            iconUrl: "../img/cab1.png",
            iconSize: [70, 70]
        })

        var cab2 = L.icon({
            iconUrl: "../img/cab2.png",
            iconSize: [70, 70]
        })

        var cab3 = L.icon({
            iconUrl: '../img/cab3.png',
            iconSize: [70, 70]
        })

        var fireFighterIcon = L.icon({
            iconUrl: '../img/fireFighter.png',
            iconSize: [40, 40]
        })

        var emergencyIcon = L.icon({
            iconUrl: '../img/emergency.png',
            iconSize: [100, 100]
        })

        // All markers

        var markerArray = []
        //fetch all markers from backend
        var markers = '<%- JSON.stringify(markers)%>'
        var allMarkers = JSON.parse(markers)
        //add markers to leaflet
        for (marker of allMarkers) {
            if (marker.icon == 'cab1') {
                markerArray.push(L.marker([marker.location.coordinates[1], marker.location.coordinates[0]], { icon: cab1 }).addTo(map));
            } else if (marker.icon == 'cab2') {
                markerArray.push(L.marker([marker.location.coordinates[1], marker.location.coordinates[0]], { icon: cab2 }).addTo(map));
            } else if (marker.icon == 'cab3') {
                markerArray.push(L.marker([marker.location.coordinates[1], marker.location.coordinates[0]], { icon: cab3 }).addTo(map));
            } else if (marker.icon == 'fireFighterIcon') {
                markerArray.push(L.marker([marker.location.coordinates[1], marker.location.coordinates[0]], { icon: fireFighterIcon }).addTo(map));
            } else if (marker.icon == 'emergencyIcon') {
                markerArray.push(L.marker([marker.location.coordinates[1], marker.location.coordinates[0]], { icon: emergencyIcon }).addTo(map));
            }
        }

        function travel(e) {
            fetch('/travel', { method: 'POST' }).then(response => response.json()).then(data => {
                L.Routing.control({
                    waypoints: [
                        // emergency
                        L.latLng(data[0][1], data[0][0]),
                        // fireFighter1
                        L.latLng(data[1][1], data[1][0]),
                        // fireFighter1
                        L.latLng(data[2][1], data[2][0]),
                        // Cab1
                        L.latLng(data[3][1], data[3][0]),
                    ]
                }).on('routesfound', function (e) {
                    var routes = e.routes;
                    console.log(routes);

                    e.routes[0].coordinates.forEach(function (coord, index) {
                        setTimeout(function () {
                            markerArray[6].setLatLng([coord.lat, coord.lng]);
                        }, 100 * index)
                    })

                }).addTo(map);
            })

        }


        // function travel(e) {
        //     console.log(e)
        //     fetch('/travel', { method: 'POST' }).then((response) => {
        //         if (response.ok) {
        //             console.log(response)
        //             console.log('Click was recorded');
        //             return;
        //         }
        //         throw new Error('Request failed');
        //     }).catch((error) => {
        //         console.log(error)
        //     });
            // L.Routing.control({
            //     waypoints: [

            //      // Cab1
            //         // L.latLng(49.3692442,8.5858208),
            //         L.latLng(49.3692442,8.5858208),
            //      // fireFighter2
            //         // L.latLng(49.3775151, 8.5908414),
            //         L.latLng(49.3721315, 8.6308641),
            //     // fireFighter1
            //         // L.latLng(49.3946825,8.5728362),
            //         L.latLng(49.3946825, 8.5728362),
            //          // emergency
            //         // L.latLng(49.4149879,8.5430918),
            //         L.latLng(49.4149879,8.5430918),
            //     ]
            // }).on('routesfound', function (e) {
            //     var routes = e.routes;
            //     console.log(routes);

            //     e.routes[0].coordinates.forEach(function (coord, index) {
            //         setTimeout(function () {
            //             markerArray[6].setLatLng([coord.lat, coord.lng]);
            //         }, 100 * index)
            //     })

            // }).addTo(map);
        


    </script>


</body>

</html>

